ac_conquest_cb = {
	icon = ac_cb_icon
	group = ac_casus_belli

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		is_current_dragonrider = yes
		has_variable = ac_started_conquest

		#AGOT Added, NW should not be conquering
		NOT = { has_government = nights_watch_government }
	}

	allowed_against_character = {
		OR = {
			scope:defender = { has_title = title:e_dorne }
			scope:defender = { has_title = title:e_the_north }
			scope:defender = { has_title = title:e_the_reach }
			scope:defender = { has_title = title:e_the_riverlands }
			scope:defender = { has_title = title:e_the_stormlands }
			scope:defender = { has_title = title:e_the_vale }
			scope:defender = { has_title = title:e_the_westerlands }
			scope:defender = { has_title = title:e_the_iron_islands }
		}
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}

		NOT = {
			AND = {
				scope:attacker = {
					government_has_flag = government_is_feudal
				}
				scope:defender = {
					has_government = nights_watch_government
				}
			}
		}
		agot_mw_war_valid_during_megawar = yes
		NOT = { has_government = ruins_government }
	}
	target_titles = all
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_can_target_all_titles = {
		can_use_viking_invasion_cbs_trigger = yes
	}
	ai_score_mult = {
		value = viking_conquest_ai_score_value

		# As a feudal gov, do not attack tribal
		add = {
			every_in_list = {
				list = target_titles
				if = {
					limit = { feudal_clan_tribal_conquest_constraints = yes }
					add = -1000
				}
			}
		}

		# AI in struggles act insularly for wars that don't have a familial or legal basis.
		multiply = struggle_wars_prioritise_struggle_targets_value
	}

	valid_to_start = {
		scope:target = {
			any_in_de_jure_hierarchy = {
				tier = tier_county
				neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
				NOT = { title_province = { geographical_region = world_westeros_beyond_the_wall } }
			}
		}
		NOT = {
			scope:target = { agot_invalid_war_target = yes }
		}
		scope:target = {
			tier = tier_kingdom
			NOT = {
				any_in_de_jure_hierarchy = {
					tier = tier_county
					title_province = { geographical_region = world_westeros_beyond_the_wall }
				}
			}
		}
	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				is_current_dragonrider = no
			}
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = {
							target_is_same_character_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = medium_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = 0
			add = {
				value = minor_prestige_value
				desc = CB_BASE_COST
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
		if = {
			limit = {
				scope:defender = { primary_title = title:e_the_north }
			}
			scope:attacker = {
				trigger_event = {
					id = ac_war_events.0004
					days = 20
				}
			}
		}
		else_if = {
			limit = {
				scope:defender = { primary_title = title:e_the_stormlands }
			}
			scope:attacker = {
				trigger_event = {
					id = ac_war_events.0007
					days = 5
				}
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		every_in_list = {
			list = target_titles
			if = {
				limit = { this = title:k_the_iron_islands }
				save_scope_as = iron_islands_title
			}
			if = {
				limit = { this = title:k_the_riverlands }
				save_scope_as = the_riverlands_title
			}
		}
		if = {
			limit = {
				OR = {
					scope:defender = { has_title = title:e_dorne }
					scope:defender = { has_title = title:e_the_iron_islands }
					scope:defender = { primary_title = title:e_the_north }
					scope:defender = { primary_title = title:e_the_reach }
					scope:defender = { has_title = title:e_the_riverlands }
					scope:defender = { primary_title = title:e_the_stormlands }
					scope:defender = { primary_title = title:e_the_vale }
					scope:defender = { primary_title = title:e_the_westerlands }
				}
			}
			if = {
				limit = { scope:defender.primary_title = title:e_dorne  }
				scope:attacker = { 
					get_title = title:k_dorne
					trigger_event = conq_events.0008
				}
			}
			else_if = { # if has both but target is riverlands
				limit = {
					scope:defender = { has_title = title:e_the_riverlands }
					exists = scope:the_riverlands_title
				}
				scope:attacker = { 
					get_title = title:k_the_riverlands
					trigger_event = conq_events.0002
				}
			}
			else_if = { # if has both but target is isles
				limit = {
					scope:defender.primary_title = title:e_the_iron_islands 
					exists = scope:iron_islands_title
				}
				scope:attacker = { 
					get_title = title:k_the_iron_islands
					trigger_event = conq_events.0011
				}
			}
			
			else_if = {
				limit = { scope:defender.primary_title = title:e_the_north  }
				scope:attacker = { 
					get_title = title:k_the_north
					trigger_event = conq_events.0007
				}
			}
			else_if = {
				limit = { scope:defender.primary_title = title:e_the_reach  }
				scope:attacker = { 
					get_title = title:k_the_reach
					trigger_event = conq_events.0005
				}
			}
			else_if = {
				limit = { scope:defender.primary_title = title:e_the_vale  }
				scope:attacker = { 
					get_title = title:k_the_vale
					trigger_event = conq_events.0003
				}
			}
			else_if = {
				limit = { scope:defender.primary_title = title:e_the_westerlands  }
				scope:attacker = { 
					get_title = title:k_the_westerlands
					trigger_event = conq_events.0006
				}
			}
			else_if = {
				limit = { scope:defender.primary_title = title:e_the_stormlands  }
				if = {
					limit = {
						character:Baratheon_14 = { is_alive = yes }
						character:Durrandon_88 = { is_alive = yes }
					}
					scope:attacker = { 
						get_title = title:k_the_stormlands
						trigger_event = conq_events.0010 # send orys event first
					}
				}
				else_if = {
					limit = { 
						OR = {
							character:Baratheon_14 = { is_alive = no }
							character:Durrandon_88 = { is_alive = no }
						}
					}
					scope:attacker = {
						get_title = title:k_the_stormlands
						trigger_event = conq_events.0004
					}
				}
			}
		}

		######## for buildings and renames ########

		if = {
			limit = { scope:attacker = { var:ac_started_conquest = 1 } }
			province:4152 = {
				set_holding_type = city_holding
			}
			title:b_rhaenyss_hill = {
				set_title_name = b_rhaenys_hh
			}
		}
		else_if = {
			limit = { scope:attacker = { var:ac_started_conquest = 2 } }
			province:4156 ={
				set_holding_type = castle_holding
			}
		}
		else_if = {
			limit = { scope:attacker = { var:ac_started_conquest = 3 } }
			province:4154 = {
				set_holding_type = city_holding
			}
		}
		else_if = {
			limit = { scope:attacker = { var:ac_started_conquest = 4 } }
			province:4155 = {
				set_holding_type = city_holding
			}
		}
		else_if = {
			limit = { scope:attacker = { var:ac_started_conquest = 5 } }
			province:4153 = {
				set_holding_type =  church_holding
			}
			title:b_visenyas_hill = {
				set_title_name = b_visenyas_hh
			}
			scope:attacker = { 
				trigger_event = conq_events.0009 # form iron throne when ac variable > 4
			}
		}
		else_if = {
			limit = {
				scope:attacker = { var:ac_started_conquest = 8 }
			}
			remove_variable = ac_started_conquest
		}

		
		
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		if = { # Warning that only duchies are changing hands unless attacking kingdom-empire
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_kingdom
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_kingdom }
				save_scope_as = de_jure_target
			}
		}
		#Remove if swapping to dejure petty kingdoms
		if = {
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_kingdom
					holder = scope:defender
				}
			}
			if = {
				limit = {
					scope:defender = {
						any_held_title = {
							tier = tier_county
							NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
						}
					}
				}
				custom_tooltip = conquest_title_not_transferred_tt
			}
			else = { custom_tooltip = conquest_title_destroyed_tt }
		}
		else = {
			if = {
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_kingdom
						is_title_created = yes
					}
				}
				custom_tooltip = conquest_title_usurp_tt
			}
			else = { custom_tooltip = conquest_title_create_tt }
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		if = { # Warning that only duchies are changing hands unless attacking kingdom-empire
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_kingdom
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_kingdom }
				save_scope_as = de_jure_target
			}
		}

		

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker

		#EP2 accolade glory gain for doing pretty good against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "AEGONS_CONQUEST_WAR_NAME"
	war_name_base = "AEGONS_CONQUEST_WAR_NAME_BASE"
	cb_name = "AEGONS_CONQUEST_KINGDOM_CB_NAME"

	interface_priority = 1004

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
}